Example to C++ program to apply the new operator
*var=new int;
Program
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
#include<iostream>
 
using namespace std;
 
int main(){
 
int* Var;
 
Var = new int;
 
*Var = 50;
 
cout<<*Var;
 
}
 The "delete" Operator In C
#include<iostream>
 
using namespace std;
 
int main(){
 
int* Var;
 
Var = new int;
 
*Var = 50;
 
cout<<*Var;
 
delete Var;
 
}
Program to initialize dynamically allocated arrays:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
#include <iostream>
 
using namespace std;
 
int main(void) {
 
int num;
 
int *array{ new int[6]{ 1,2,3,4,5,6} };
 
cout << "Array elements: " << endl;
 
for (num = 0; num < 6; num++) {
 
cout << array[num] << endl;
 
}
 
return 0;
 
}
Now let's look at an example that shows how to deallocate memory to arrays in C++.
Program to delete dynamic array memory:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
#include <iostream>
 
using namespace std;
 
int main() {
 
int length;
 
cin >> length;
 
int * array= new int[length];
 
for (int i = 0; i < length; i++) {
 
array[i] = (i + 1) * 10;
 
}
 
for (int i = 0; i < length; i++) {
 
cout << array[i] << " " << endl;
 
Example of dynamic memory allocation for objects
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
pace std;
class tests {
 
public:
 
tests() {
 
cout<<"hello"<<endl;
 
}
 
~tests(){
 
cout<<"hey"<<endl;
 
}
 
};
 
8. Deallocation Of Dynamic Memory
Example
delete ptr;
Program
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
#include<iostream>
 
using namespace std;
 
int main(){
 
int* Var;
 
Var = new int;
 
*Var = 50;
 
cout<<*Var;
 
delete Var;
 
}
