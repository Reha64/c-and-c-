Union in C
Example:
union Record{ 
 int i;
 float f;
 char str[20];
} record;
Example 1:

#include <stdio.h>
#include <string.h>
 
union Record {
   int i;
   float f;
   char str[20];
};
 
int main( ) {
   union Record record;        
   printf("Memory size occupied by record : %d\n", sizeof(record));
   return 0;
}
Example 2:

#include <stdio.h>

union test1 {
	int x;
	int y;
} Test1;

union test2 {
	int x;
	char y;
} Test2;

union test3 {
	int arr[10];
	char y;
} Test3;

int main()
{
	printf("sizeof(test1) = %lu\nsizeof(test2) = %lu\n""sizeof(test3) = %lu\n",sizeof(Test1),sizeof(Test2), sizeof(Test3));
	return 0;
}
Difference Between Normal vs Pointer Variable
Example 1:

Code:

#include <stdio.h>
#include <string.h>
 
union Data {
   int i;
   float f;
   char str[20];
};
 
int main( ) {

   union Data data;        
   printf("\n...Example of Union...\n\n");
   data.i = 25;
   printf("data.i : %d\n", data.i);
   
   data.f = 500.1;
   printf("data.f : %f\n", data.f);
   
   strcpy( data.str, "C Programming");
   printf("data.str : %s\n", data.str);

   return 0;
}
Example 2:

Code:

#include <stdio.h>

union test {
	int x;
	char y;
};

int main()
{
    printf("...Decimal to ASCII code by using Union...\n\n");
	union test p1;
	printf("p1.x = "); // Enter integer
	scanf("%d", &p1);

	// p2 is a pointer to union p1
	union test* p2 = &p1;

	// Accessing union members using pointer
	printf("%d %c", p2->x, p2->y);
	return 0;
}

