Example 2.1  Demonstrate the use of a variable number of arguments.

#include <stdarg.h>
#include <stdio.h>

int min(int arg_count, ...)
{
	int i;
	int min, a;

// va_list is a type to hold information about variable arguments
	va_list ap;

// va_start must be called before accessing the variable argument list
	va_start(ap, arg_count);

// Now arguments can be accessed one by one using va_arg macro. Initialize min as the first argument in the list
	min = va_arg(ap, int);

	// traverse rest of the arguments to find out the minimum
	for (i = 2; i <= arg_count; i++)
		if ((a = va_arg(ap, int)) < min)
			min = a;

// va_end should be executed before the function returns whenever va_start has been previously used in that function
	va_end(ap);

	return min;
}

// Driver code
int main()
{
	int count = 5;
	printf("Minimum value is %d", min(count, 12, 67, 6, 7, 100));
	return 0;
}

Example 2.2   Average of multiple numbers using variable arguments.

#include <stdarg.h>
#include <stdio.h>

int average(int num, ...)
{
	va_list valist;

	int sum = 0, i;

	va_start(valist, num);
	for (i = 0; i < num; i++)
		sum += va_arg(valist, int);

	va_end(valist);

	return sum / num;
}

// Driver code
int main()
{
    printf("Average of {2, 3, 4} = %d\n", average(2, 3, 4));
    printf("Average of {3, 5, 10, 15} = %d\n", average(3, 5, 10, 15));
	return 0;
}
